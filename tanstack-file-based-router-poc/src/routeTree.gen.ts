/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as AuthImport } from './routes/_auth'
import { Route as PublicLoginImport } from './routes/_public/login'
import { Route as AuthPokemonsIndexImport } from './routes/_auth/pokemons/index'
import { Route as AuthPokemonsPokemonIdImport } from './routes/_auth/pokemons/$pokemonId'

// Create Virtual Routes

const AuthIndexLazyImport = createFileRoute('/_auth/')()

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/index.lazy').then((d) => d.Route))

const PublicLoginRoute = PublicLoginImport.update({
  path: '/login',
  getParentRoute: () => PublicRoute,
} as any)

const AuthPokemonsIndexRoute = AuthPokemonsIndexImport.update({
  path: '/pokemons/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPokemonsPokemonIdRoute = AuthPokemonsPokemonIdImport.update({
  path: '/pokemons/$pokemonId',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginImport
      parentRoute: typeof PublicImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/pokemons/$pokemonId': {
      id: '/_auth/pokemons/$pokemonId'
      path: '/pokemons/$pokemonId'
      fullPath: '/pokemons/$pokemonId'
      preLoaderRoute: typeof AuthPokemonsPokemonIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/pokemons/': {
      id: '/_auth/pokemons/'
      path: '/pokemons'
      fullPath: '/pokemons'
      preLoaderRoute: typeof AuthPokemonsIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthIndexLazyRoute,
    AuthPokemonsPokemonIdRoute,
    AuthPokemonsIndexRoute,
  }),
  PublicRoute: PublicRoute.addChildren({ PublicLoginRoute }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_public"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/pokemons/$pokemonId",
        "/_auth/pokemons/"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/login"
      ]
    },
    "/_public/login": {
      "filePath": "_public/login.tsx",
      "parent": "/_public"
    },
    "/_auth/": {
      "filePath": "_auth/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/pokemons/$pokemonId": {
      "filePath": "_auth/pokemons/$pokemonId.tsx",
      "parent": "/_auth"
    },
    "/_auth/pokemons/": {
      "filePath": "_auth/pokemons/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
